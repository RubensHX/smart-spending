// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  sessions      Session[]
  Spending      Spending[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Spending {
  id            String      @id @default(cuid())
  userId        String
  amount        Float
  description   String
  date          DateTime
  transactionId String
  User          User        @relation(fields: [userId], references: [id])
  Transaction   Transaction @relation(fields: [transactionId], references: [id])
}

model Transaction {
  id            String     @id @default(cuid())
  amount        Float
  description   String
  category      String
  paymentMethod String
  date          DateTime   @default(now())
  Budget        Budget[]
  Spending      Spending[]
}

model Budget {
  id            String       @id @default(cuid())
  userId        String
  amount        Float
  date          DateTime
  Transaction   Transaction? @relation(fields: [transactionId], references: [id])
  transactionId String?
}
